$(document).ready(function() {
        $("[data-bs-hover-animate]").mouseenter(function() {
            var e = $(this);
            e.addClass("animated " + e.attr("data-bs-hover-animate"))
        }).mouseleave(function() {
            var e = $(this);
            e.removeClass("animated " + e.attr("data-bs-hover-animate"))
        })
    }), "serviceWorker" in navigator && navigator.serviceWorker.register("sw.js").then(e => console.log("Registro de SW exitoso", e)).catch(e => console.warn("Error al tratar de registrar el sw", e)),
    function(e) {
        "use strict";
        e('a.js-scroll-trigger[href*="#"]:not([href="#"])').click(function() { if (location.pathname.replace(/^\//, "") == this.pathname.replace(/^\//, "") && location.hostname == this.hostname) { var t = e(this.hash); if ((t = t.length ? t : e("[name=" + this.hash.slice(1) + "]")).length) return e("html, body").animate({ scrollTop: t.offset().top - 57 }, 1e3, "easeInOutExpo"), !1 } }), e(".js-scroll-trigger").click(function() { e(".navbar-collapse").collapse("hide") }), e("body").scrollspy({ target: "#mainNav", offset: 57 });
        var t = function() { e("#mainNav").offset().top > 100 ? e("#mainNav").addClass("navbar-shrink") : e("#mainNav").removeClass("navbar-shrink") };
        t(), e(window).scroll(t), e(".popup-gallery").magnificPopup({ delegate: "a", type: "image", tLoading: "Loading image #%curr%...", mainClass: "mfp-img-mobile", gallery: { enabled: !0, navigateByImgClick: !0, preload: [0, 1] }, image: { tError: '<a href="%url%">The image #%curr%</a> could not be loaded.' } })
    }(jQuery);
class FileOfDriveToWeb {
    constructor(e, t) { this.objectWhen = e, this.DriveUrl = t, this.routeIframe = null, this.excecuteClass() }
    excecuteClass() { void 0 === this.objectWhen || void 0 === this.DriveUrl ? $("body").append($("<p>", { style: "color:red;", text: "Ocurrió un error al cargar la clase : FileOfDriveToWeb" })) : (this.createUrlToFiles(), this.buildContainer()) }
    createUrlToFiles() {
        let e = this.DriveUrl.split("/")[5];
        this.routeIframe = this.getRouteToSetNewRoute(e)
    }
    buildIframe() { return $("<iframe>", { style: "max-width: 100%; height: auto; width:600px; height:800px;", frameborder: "0", src: this.routeIframe }) }
    buildContainer() {
        let e = $("<div>", { class: "container_fluid" });
        e.append($("<div>", { class: "row" })).append($("<div>", { class: "col-xs-12 col-sm-12 col-md-10 col-lg-10 col-xl-10 m-auto" })).append(this.buildIframe()), this.objectWhen.html(e)
    }
    getRouteToSetNewRoute(e) { return `https://docs.google.com/gview?a=v&pid=explorer&chrome=false&api=true&embedded=true&srcid=${e}&hl=en&embedded=true` }
}
let usuario = 4,
    api = "https://ef010.000webhostapp.com/";

function cargarModalTrabajo(e, t) { $("#modal-trabajo .modal-title").text(e), $("#modal-trabajo .modal-body").html(t), $("#modal-trabajo").modal({ backdrop: "static", keyboard: !1, show: !0 }) }

function indexAjaxFolder() { $.ajax({ type: "get", url: api + "api/folder", data: { folio: usuario }, dataType: "json", success: function(e) { cargarModalTrabajo("Ver Carpetas", e.html), detalleCarpeta(), createFolder() } }) }

function createFolder() { $(".btn-create-folder").on("click", function(e) { e.preventDefault(), $.ajax({ type: "GET", url: api + "api/folder/create", data: {}, dataType: "json", success: function(e) { $("#modal-trabajo .modal-body").html(e.html), storeFolder() } }) }) }

function storeFolder() { $("#formStoreFolder").submit(function(e) { e.preventDefault(), $(".idFolderStore").val(usuario), confirm("¿Realmente quieres crear esta carpeta?") && $.ajax({ headers: {}, type: "POST", url: api + "api/folder", data: $(this).serialize(), dataType: "json", success: function(e) { $("#modal-trabajo .modal-body").html(e.html), $(".btn-categorias-show").click() } }) }) }

function detalleCarpeta() {
    let e = 0,
        t = 0;
    $(".folderContainer").click(function(a) { a.preventDefault(), 2 === e ? (enviaPeticionShow(t = parseInt($(this).find(".folio").text())), e = 0) : e++ })
}

function enviaPeticionShow(e) { $.ajax({ type: "GET", url: api + "api/folder/" + e, data: { _method: "HEAD" }, dataType: "json", success: function(e) { $("#modal-trabajo .modal-body").html(e.html), createFolder(), accionesFolder(), createFolder() } }) }

function accionesFolder() { destroyFolder(), editFolder() }

function destroyFolder() { $(".show-Folder .destroy").click(function(e) { e.preventDefault(), confirm("¿Deseas eliminar la carpeta\nya no podrá recuperarse?") && $.ajax({ headers: {}, type: "POST", url: api + "api/folder/" + $(".f-Id").text(), data: { _method: "DELETE", token: $(".token").find("input").text() }, dataType: "json", success: function(e) { $("#modal-trabajo .modal-body").html(e.html), $(".btn-categorias-show").click() } }) }) }

function editFolder() { $(".show-Folder .update").on("click", function(e) { e.preventDefault(), $.ajax({ type: "GET", url: api + "api/folder/" + $(".f-Id").text() + "/edit", data: { _method: "HEAD" }, dataType: "json", success: function(e) { $("#modal-trabajo .modal-body").html(e.html), updateFolder() } }) }) }

function updateFolder() { $("#formUpdateFolder").submit(function(e) { e.preventDefault(), confirm("¿Realmente quieres actualizar los datos?") && $.ajax({ headers: {}, type: "POST", url: api + "api/folder/" + $(".f-Id").text(), data: $(this).serialize(), dataType: "json", success: function(e) { $("#modal-trabajo .modal-body").html(e.html), precionaEntendido() } }) }) }

function precionaEntendido() { $(".btn-entendido").click(function(e) { e.preventDefault(), $(".btn-categorias-show").click() }) }

function configureLoadingScreen(e) { $(document).ajaxStart(function() { e.fadeIn() }).ajaxStop(function() { e.fadeOut() }) }
configureLoadingScreen($("#loading-screen")), $(".btn-categorias-show").click(function(e) { e.preventDefault(), indexAjaxFolder() }), $(function() { $(".btn-almacena-data").click(function(e) { e.preventDefault(), confirm("¿Deseas crear el archivo de configuración?") }) });
let tarjetaurl = api;

function indexAjaxCard() { $.ajax({ type: "GET", url: tarjetaurl + "api/card", data: { folio: usuario }, dataType: "json", success: function(e) { cargarModalTrabajo("Contenido", e.html), destroyCard(), createCard(), editCard() } }) }

function indexCard() { $(".btn-tarjeta-index").click(function(e) { e.preventDefault(), indexAjaxCard() }) }

function createCard() { $(".card-index .create").click(function(e) { e.preventDefault(), $.ajax({ type: "GET", url: tarjetaurl + "api/card/create", data: { _method: "HEAD", user: usuario }, dataType: "json", success: function(e) { cargarModalTrabajo("Contenido", e.html), sotreCard() } }) }) }

function sotreCard() { $(".store-card form").submit(function(e) { e.preventDefault(), confirm("¿Realmente deseas almacenar este contenido?") && $.ajax({ type: "POST", url: tarjetaurl + "api/card", data: $(this).serialize(), dataType: "json", success: function(e) { alert(e.alert), cargarModalTrabajo("Contenido", e.html), indexAjaxCard() }, error: function(e) { ajaxError(e) } }) }) }

function editCard() {
    $(".card-index .update").click(function(e) {
        e.preventDefault();
        let t = parseInt($(this).parent().parent().find(".folio").text());
        $(this).parent().parent();
        $.ajax({ type: "GET", url: tarjetaurl + `api/card/${t}/edit`, data: { _method: "HEAD" }, dataType: "json", success: function(e) { cargarModalTrabajo("Contenido", e.html), updateCard() } })
    })
}

function updateCard() { $(".update-card form").submit(function(e) { e.preventDefault(), confirm("¿Realmente deseas realizar los cambios en el contenido?") && $.ajax({ headers: {}, type: "POST", url: tarjetaurl + "api/card/" + $(this).find("input[name=card_id]").val(), data: $(this).serialize(), dataType: "json", success: function(e) { alert(e.alert), indexCard(), $(".btn-tarjeta-index").click() }, error: function(e) { ajaxError(e) } }) }) }

function destroyCard() {
    $(".card-index .delete").click(function(e) {
        if (e.preventDefault(), confirm("¿Realmente quieres eliminar este elemento?")) {
            let e = parseInt($(this).parent().parent().find(".folio").text()),
                t = $(this).parent().parent();
            $.ajax({ type: "POST", url: tarjetaurl + "api/card/" + e, data: { _method: "DELETE" }, dataType: "json", success: function(e) { alert(e.alert), t.remove() }, error: function(e) { ajaxError(e) } })
        }
    })
}
$(function() { indexCard() });
let url = api;

function indexVideo() { $.ajax({ type: "GET", url: url + "api/videoc", data: { folio: usuario }, dataType: "json", success: function(e) { cargarModalTrabajo("Videos", e.html), showVideo(), createVideo(), addRecent() }, beforeSend: function() {}, complete: function(e) {}, error: function(e) {} }) }

function showVideo() {
    let e = 0;
    $(".option-video").click(function(t) {
        if (t.preventDefault(), 2 === e) {
            let t = $(this).find(".folio-video").text();
            $.ajax({ type: "GET", url: url + "api/videoc/" + t, data: { _method: "HEAD" }, dataType: "json", success: function(e) { $(".index-video-container").toggle(), $("#modal-trabajo .modal-body").append(e.html), videoDestroy(), videoAtras() }, beforeSend: function() {}, complete: function(e) {}, error: function(e) {} }), e = 0
        } else e++
    })
}

function videoAtras() { $(".btn-video-atras").click(function(e) { e.preventDefault(), indexVideo() }) }

function videoDestroy() { $(".video-show .destroy").click(function(e) { e.preventDefault(), confirm("¿Realmente quieres eliminar el video?") && $.ajax({ type: "POST", url: url + "api/videoc/" + $(".video-show .folio").text(), data: { _method: "DELETE", token: $(".video-show .token").text() }, dataType: "json", success: function(e) { $("#modal-trabajo .modal-body").html(e.html), entendidoAction() }, beforeSend: function() {}, complete: function(e) {}, error: function(e) {} }) }) }

function entendidoAction() { $(".btn-entendido").click(function(e) { e.preventDefault(), indexVideo() }) }

function createVideo() { $(".btn-video-create").click(function(e) { e.preventDefault(), $.ajax({ type: "GET", url: url + "api/videoc/create", data: { _method: "HEAD", folio: usuario }, dataType: "json", success: function(e) { $("#modal-trabajo .modal-body").html(e.html), storeVideo() }, beforeSend: function() {}, complete: function(e) {}, error: function(e) {} }) }) }

function storeVideo() { procesaLink(), $("#form-create-video").submit(function(e) { e.preventDefault(), confirm("¿Deseas realizar el registro del video?") && $.ajax({ type: "POST", url: url + "api/videoc", data: $(this).find("form").eq(0).serialize(), dataType: "json", success: function(e) { $("#modal-trabajo .modal-body").html(e.html), entendidoAction() }, beforeSend: function() {}, complete: function(e) {}, error: function(e) {} }) }) }

function procesaLink() {
    $("#form-create-video input[name=link]").change(function(e) {
        e.preventDefault();
        let t = `https://img.youtube.com/vi/${youtube_parser($(this).val())}/maxresdefault.jpg`;
        $("#form-create-video .image-YouTube").attr("src", t), $("#form-create-video input[name=caratula_link]").val(t)
    })
}

function youtube_parser(e) { var t = e.match(/^.*((youtu.be\/)|(v\/)|(\/u\/\w\/)|(embed\/)|(watch\?))\??v?=?([^#&?]*).*/); return !(!t || 11 != t[7].length) && t[7] }

function addRecent() { $(".btn-anexar").click(function(e) { e.preventDefault(), confirm("¿Deseas agregar a videos actuales?") && $.ajax({ type: "GET", url: url + `api/recent/${usuario}/${$(this).attr("href")}`, data: {}, dataType: "json", success: function(e) { alert(e.alert) }, beforeSend: function() {}, complete: function(e) {}, error: function(e) {} }) }) }
$(function() { $(".btn-videos-index").on("click", function(e) { e.preventDefault(), indexVideo() }) });
let urlVideo = api;

function showVideoActual() { $(".btn-video-actual-index").click(function(e) { e.preventDefault(), showVideoAjax() }) }

function showVideoAjax() { $.ajax({ type: "GET", url: urlVideo + "api/actualv", data: { folio: usuario }, dataType: "json", success: function(e) { cargarModalTrabajo("Videos", e.html), destroyAcual() }, beforeSend: function() {}, complete: function(e) {}, error: function(e) {} }) }

function destroyAcual() {
    $(".option-video .btn-remove").click(function(e) {
        if (e.preventDefault(), confirm("¿Realmente deseas eliminar el video de actuales?")) {
            let e = $(this).attr("href"),
                t = $(this).parent().find(".tok").text();
            $.ajax({ type: "POST", url: urlVideo + "api/actualv/" + e, data: { _method: "DELETE", _token: t }, dataType: "json", success: function(e) { alert(e.alert), showVideoAjax() }, beforeSend: function() {}, complete: function(e) {}, error: function(e) {} })
        }
    })
}
$(function() { showVideoActual() });
let route = api + "api/categoria";

function eventoIndexCategoria() { $(".btn-show-categoria").click(function(e) { e.preventDefault(), categoriaIndexAjax() }) }

function eventoCreateCategoria() { $(".btn-create-category").click(function(e) { e.preventDefault(), categoriaCreateAjax($(this).find(".folio-folder").text()) }) }

function eventoStorageCategoria() { $(".create-categoria-component form").submit(function(e) { e.preventDefault(), categoriaStorage($(this)) }) }

function eventoShowCategoria() { $(".btn-show-caracte").click(function(e) { e.preventDefault(), showCategoriaAjax($(this).find(".categoria-folio").text()) }) }

function eventoDestroyCategoria() { $(".show-categoria-detail .btn-eliminar").click(function(e) { e.preventDefault(), categoriaDestroyAjax($(this).find(".detalle").text()) }) }

function eventoEditCategoria() { $(".show-categoria-detail .btn-actualizar").click(function(e) { e.preventDefault(), categoriaEditAjax($(this).find(".detalle").text()) }) }

function eventoUpdateCategoria() { $(".update-categoria form").submit(function(e) { e.preventDefault(), categoriaUpdateAjax($(this)) }) }

function categoriaUpdateAjax(e) { confirm("¿Realmente deseas actualizar la categoría?") && $.ajax({ type: "POST", url: route + "/" + e.find("input[name=id]").val(), data: e.serialize(), dataType: "json", success: function(e) { alert(e.alert), categoriaIndexAjax() }, error: function(e) { ajaxError(e) } }) }

function categoriaEditAjax(e) { $.ajax({ type: "GET", url: route + "/" + e + "/edit", data: { _method: "HEAD" }, dataType: "json", success: function(e) { cargarModalTrabajo("DETALLE CATEGORÍA EDITA", e.html), eventoUpdateCategoria() }, beforeSend: function() {}, complete: function(e) {}, error: function(e) { ajaxError(e) } }) }

function categoriaDestroyAjax(e) { confirm("¿Quieres eliminar la categoría?") && $.ajax({ type: "POST", url: route + "/" + e, data: { _method: "DELETE" }, dataType: "json", success: function(e) { alert(e.alert), categoriaIndexAjax() }, error: function(e) { ajaxError(e) } }) }

function showCategoriaAjax(e) { $.ajax({ type: "GET", url: route + "/" + e, data: { _method: "HEAD" }, dataType: "json", success: function(e) { cargarModalTrabajo("DETALLE CATEGORÍA", e.html), eventoDestroyCategoria(), eventoEditCategoria(), btnNewFileEvt(), btnEvtGetFiles(), evtIndexVideo(), evtCreateVideoContenido() }, beforeSend: function() {}, complete: function(e) {}, error: function(e) { ajaxError(e) } }) }
$(function() { eventoIndexCategoria() });
let tempSelected = 0;

function evtCreateVideoContenido() { $(".btn-registro-video").click(function(e) { e.preventDefault(), tempSelected = $(this).find("span").eq(0).text(), actionCreateVideoContenido() }) }

function actionCreateVideoContenido() { $.ajax({ type: "GET", url: api + "api/cVideoCont/create", data: { categoria: tempSelected, usuario: usuario }, dataType: "json", success: function(e) { cargarModalTrabajo("Registrar Video", e.html), evtStoreVideo() } }) }

function evtStoreVideo() { $("#form-store-vc").submit(function(e) { e.preventDefault(), confirm("¿Realmente quieres registrar el video en esta categoria?") && actionStoreVideoC($(this)) }) }

function actionStoreVideoC(e) { $.ajax({ type: "POST", url: api + "api/cVideoCont", data: e.serialize(), dataType: "json", success: function(e) { alert(e.alert), showCategoriaAjax(tempSelected) } }) }

function evtIndexVideo() { $(".btn-index-videos").click(function(e) { e.preventDefault(), tempSelected = $(this).find("span").eq(0).text(), getIndexVideo() }) }

function getIndexVideo() { confirm("¿Quieres ver los videos?") && $.ajax({ type: "GET", url: api + "api/cVideoCont", data: { categoria: tempSelected, usuario: usuario }, dataType: "json", success: function(e) { cargarModalTrabajo("Videos", e.html), $("#tbl-videos-contenido").DataTable({ language: { url: "https://cdn.datatables.net/plug-ins/9dcbecd42ad/i18n/Spanish.json" } }), $(".btn-atras-c").click(function(e) { showCategoriaAjax(tempSelected) }), evtDestroyVideosContenido(), evtEditContenidoVideo(), evtStoreVideo() } }) }

function evtEditContenidoVideo() {
    $(".btn-edit-contenido-video").click(function(e) {
        e.preventDefault();
        let t = $(this).find("span").eq(0).text();
        confirm("¿Quieres editar el video en la base de datos?") && $.ajax({ type: "get", url: api + "api/cVideoCont/" + t + "/edit", data: { usuario: usuario, categoria: tempSelected }, dataType: "json", success: function(e) { cargarModalTrabajo("Editar Video", e.html), evtFrmEditarCvideo() } })
    })
}

function evtFrmEditarCvideo() { $("#frm-editar-vContenido").submit(function(e) { e.preventDefault(), confirm("¿Realmente deseas actualizar este video?") && actionUpdateContenidoVideo($(this)) }) }

function actionUpdateContenidoVideo(e) { $.ajax({ type: "POST", url: api + "api/cVideoCont/" + e.find("span").eq(0).text(), data: e.serialize(), dataType: "json", success: function(e) { alert(e.alert) } }) }

function evtDestroyVideosContenido() {
    $(".btn-delete-information").click(function(e) {
        if (e.preventDefault(), confirm("¿Realmente quieres eliminar el video?")) {
            let e = $(this).find("span").eq(0).text(),
                t = $(this).find("input[name='_token']").val();
            $.ajax({ type: "POST", url: api + "api/cVideoCont/" + e, data: { _method: "DELETE", _token: t }, dataType: "json", success: function(e) { alert(e.alert), showCategoriaAjax(tempSelected) } })
        }
    })
}

function btnEvtGetFiles() { $(".btn-index-archivos").click(function(e) { e.preventDefault(), getIndexFiles(usuario, $(this).find("span").eq(0).text()) }) }

function getIndexFiles(e, t) { $.ajax({ type: "GET", url: api + "api/cfilesCont", data: { user: e, category: t }, dataType: "json", success: function(e) { cargarModalTrabajo("Arhivos", e.html), evtClickDestroy(), evtClickEditFile(), evtShowPdf(), $("#tbl-files").DataTable({ language: { url: "https://cdn.datatables.net/plug-ins/9dcbecd42ad/i18n/Spanish.json" } }) } }) }

function evtShowPdf() {
    $(".btn-ver-archivo").click(function(e) {
        e.preventDefault();
        let t = $(this).find("span").eq(1).text(),
            a = $("<div>", { class: "text-center" });
        cargarModalTrabajo($(this).find("span").eq(2).text(), a);
        new FileOfDriveToWeb(a, t)
    })
}

function evtClickEditFile() { $(".btn-editar-archivo").click(function(e) { e.preventDefault(), actionEditToUpdate($(this).find("span").eq(0).text(), $(this).find("span").eq(1).text()) }) }

function actionEditToUpdate(e, t) { $.ajax({ type: "GET", url: api + "api/cfilesCont/" + usuario + "/edit", data: { user: usuario, contenido: t, cate: e }, dataType: "json", success: function(e) { cargarModalTrabajo("Editar Archivo", e.html), evtUpdateFile() } }) }

function evtUpdateFile() { $(".frm-edit-file-cate").submit(function(e) { e.preventDefault(), confirm("¿Realmente deseas actualizar el contenido ?") && updateActionFile($(this)) }) }

function updateActionFile(e) { $.ajax({ type: "POST", url: api + "api/cfilesCont/" + e.find("input[name='categoria_id']").val(), data: e.serialize(), dataType: "json", success: function(e) { alert(e.alert) } }) }

function evtClickDestroy() { $(".btn-eliminar-archivo").click(function(e) { e.preventDefault(), confirm("¿Realmente quieres eliminar esta información?") && (destroyFileAction($(this).find("span").eq(0).text()), $(this).parent().parent().remove()) }) }

function destroyFileAction(e) { $.ajax({ type: "POST", url: api + "api/cfilesCont/" + e, data: { _method: "DELETE", file: e }, dataType: "json", success: function(e) { alert(e.alert) } }) }

function categoriaStorage(e) { confirm("¿Deseas agregar esta nueva característica?") && $.ajax({ type: "POST", url: route, data: e.serialize(), dataType: "json", success: function(e) { alert(e.alert), categoriaIndexAjax() }, error: function(e) { ajaxError(e) } }) }

function categoriaCreateAjax(e) { $.ajax({ type: "GET", url: route + "/create", data: { folio: e }, dataType: "json", success: function(e) { cargarModalTrabajo("CATEGORÍAS", e.html), eventoStorageCategoria() }, beforeSend: function() {}, complete: function(e) {}, error: function(e) { ajaxError(e) } }) }

function categoriaIndexAjax() { $.ajax({ type: "GET", url: route, data: { folio: usuario }, dataType: "json", success: function(e) { cargarModalTrabajo("CATEGORÍAS", e.html), eventoCreateCategoria(), eventoShowCategoria() }, beforeSend: function() {}, complete: function(e) {}, error: function(e) { ajaxError(e) } }) }

function btnNewFileEvt() { $(".btn-nuevo-archivo").click(function(e) { e.preventDefault(), cate = $(this).find("span").eq(0).text(), petAjaxFile(cate) }) }

function petAjaxFile(e) { $.ajax({ type: "GET", url: api + "api/cfilesCont/create", data: { user: usuario, cate: e }, dataType: "json", success: function(e) { cargarModalTrabajo("Archivos Categoria", e.html), evtRegistrar() } }) }

function evtRegistrar() { $(".frm-create-file-cate").submit(function(e) { e.preventDefault(), registraFunctionCreateFile($(this)) }) }

function registraFunctionCreateFile(e) { confirm("¿Deseas Registrar el archivo?") && $.ajax({ type: "POST", url: api + "api/cfilesCont", data: e.serialize(), dataType: "json", success: function(e) { alert(e.alert) } }) }
$(".previewButton").click(function(e) { e.preventDefault(), $("#previewIframe").attr("src", function(e, t) { return t }) });
let routeHome = api;

function indexPageHome() { $.ajax({ type: "GET", url: routeHome + "api/info/" + usuario, data: { user: usuario }, dataType: "json", success: function(e) { $(".form-home").html(e.html), enviarFrm() } }) }

function enviarFrm() { $(".frm-act-portada").submit(function(e) { e.preventDefault(), confirm("Deseas actualizar registro") && $.ajax({ type: "get", url: routeHome + `api/updateP/${usuario}`, data: $(this).serialize(), dataType: "json", success: function(e) { indexPageHome() } }) }) }
$(function() { indexPageHome() });
let routeSaludable = api + "api/saludable";

function eventBtnIndexVideoSaludable() { $(".btn-videos-saludable-index").click(function(e) { e.preventDefault(), saludableIndexVideoAjax() }) }

function eventBtnIndexArvhivoSaludable() { $(".btn-archivos-saludable-index").click(function(e) { e.preventDefault(), saludableIndexArchivoAjax() }) }

function eventBtnDestroySaludable() {
    $(".btn-destroy").click(function(e) {
        e.preventDefault();
        let t = $(this).find(".id_saludable").text();
        cargarModalTrabajo("ELIMINA", '<h2>¿RealMente Quieres Eliminar?</h2><button class="si-destroy btn btn-danger">SI</button>'), eventSiDestroy(t, $(this).find("input[name=_token]").val())
    })
}

function eventSiDestroy(e, t) { $(".si-destroy").click(function(a) { a.preventDefault(), saludableDestroySaludable(e, t) }) }

function eventCreateSaludable() { $(".btn-videos-saludable-create").click(function(e) { e.preventDefault(), createDaludableAjax() }) }

function eventStoreSaludable() { $(".createSaludable form").submit(function(e) { e.preventDefault(), storeSaludableAjax($(this)) }) }

function storeSaludableAjax(e) { confirm("¿Deseas realizar el registro?") && $.ajax({ type: "POST", url: routeSaludable, data: e.serialize(), dataType: "json", success: function(e) { cargarModalTrabajo("SALUDABLE CREAR NUEVO", e.alert) } }) }

function createDaludableAjax() { $.ajax({ type: "GET", url: routeSaludable + "/create", data: { usuario: usuario }, dataType: "json", success: function(e) { cargarModalTrabajo("SALUDABLE CREAR NUEVO", e.html), eventStoreSaludable() }, beforeSend: function() {}, complete: function(e) {}, error: function(e) {} }) }

function saludableDestroySaludable(e, t) { $.ajax({ type: "POST", url: routeSaludable + "/" + e, data: { _method: "DELETE", _token: t }, dataType: "json", success: function(e) { cargarModalTrabajo("Estado", '<h3 class="text-danger">' + e.alert + "</h3>") }, beforeSend: function() {}, complete: function(e) {}, error: function(e) {} }) }

function saludableIndexVideoAjax() { $.ajax({ type: "GET", url: routeSaludable, data: { user: usuario, complemento: "video" }, dataType: "json", beforeSend: function() {}, complete: function(e) {}, error: function(e) {}, success: function(e) { cargarModalTrabajo("SALUDABLE VIDEOS", e.html), eventBtnDestroySaludable() } }) }

function saludableIndexArchivoAjax() { $.ajax({ type: "GET", url: routeSaludable, data: { user: usuario, complemento: "archivo" }, dataType: "json", beforeSend: function() {}, complete: function(e) {}, error: function(e) {}, success: function(e) { cargarModalTrabajo("SALUDABLE ARCHIVOS", e.html), eventBtnDestroySaludable() } }) }
$(function() { eventBtnIndexVideoSaludable(), eventBtnIndexArvhivoSaludable(), eventCreateSaludable() });
let routeFiles = api + "api/saludableF";

function eventoArchivo() { $(".btn-archivos-saludable-index-files").click(function(e) { e.preventDefault(), indexAjaxFilesSaludable() }) }

function indexAjaxFilesSaludable() { petAjax("Archivos", "GET", routeFiles, { user: usuario }, "json").done(function(e) { $("#filesTbl").DataTable({ language: { url: "https://cdn.datatables.net/plug-ins/9dcbecd42ad/i18n/Spanish.json" } }) }) }

function petAjax(e, t, a, o, n) { return $.ajax({ type: t, url: a, data: o, dataType: n, success: function(t) { cargarModalTrabajo(e, t.html) }, error: function(e) { cargarModalTrabajo("Ocurrió un Error", e.statusText) } }) }
$(function() { eventoArchivo() });
class FilesResource {
    constructor(e) { this.gRoute = e }
    init() { this.evtClickIndex() }
    indexFile() {
        let e = this;
        this.ajaxPetition("GET", this.gRoute, { user: usuario }, "json").done(function(t) { $("#tbl-files-arch").DataTable({ language: { url: "https://cdn.datatables.net/plug-ins/9dcbecd42ad/i18n/Spanish.json" }, pageLength: 5 }), e.evtClickCreate(), e.evtDestroyFile() })
    }
    evtClickIndex() {
        let e = this;
        $(".btn-files-index").click(function(t) { t.preventDefault(), e.indexFile() })
    }
    evtClickCreate() {
        let e = this;
        $(".btn-file-new").click(function(t) { t.preventDefault(), e.createAjaxPet() })
    }
    evtClickBack() {
        let e = this;
        $(".btn-back-file-app").click(function(t) { t.preventDefault(), e.indexFile() })
    }
    evtDestroyFile() {
        let e = this;
        $(".btnDeleteFile").click(function(t) { t.preventDefault(), e.destroyFile($(this).find("span")) })
    }
    destroyFile(e) {
        let t = this,
            a = e.eq(0).text(),
            o = { _method: "DELETE", _token: e.eq(1).text() };
        this.ajaxPetition("POST", this.gRoute + "/" + a, o, "json").done(function(e) { cargarModalTrabajo("RESPUESTA", e.html), t.indexFile() })
    }
    createAjaxPet() {
        let e = this;
        this.ajaxPetition("GET", this.gRoute + "/create", { user: usuario }, "json").done(function(t) { $("input[name=user_id]").val(usuario), e.evtClickBack(), e.evtSubmitStore() })
    }
    evtSubmitStore() {
        let e = this;
        $("#frmStoreFileApp").submit(function(t) { t.preventDefault(), e.ajaxStore() })
    }
    ajaxStore() {
        let e = this;
        this.ajaxPetition("POST", this.gRoute, $("#frmStoreFileApp").serialize(), "json").done(function(t) { cargarModalTrabajo("REGISTRO EXITOSO", t.html), e.evtClickBack() })
    }
    ajaxPetition(e, t, a, o) { return $.ajax({ type: e, url: t, data: a, dataType: o, success: function(e) { cargarModalTrabajo("ARCHIVOS REGISTRADOS", e.html) } }) }
}
let fileResource = new FilesResource(api + "api/rFile");
fileResource.init(), $(document).ajaxError(function() { $("#loading-screen").fadeOut(), $("#sinConexion").modal() });
